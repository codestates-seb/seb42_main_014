running: local
domain: http://localhost:8080

spring:
  profiles:
    include: common
    active: local
  h2:
    console:
      enabled: true
      path: /h2
  datasource:
    url: jdbc:h2:mem:test
    username: sa
    password:
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        format_sql: true
        highlight_sql: true
        use_sql_comments: true
  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${rest_api_key}
            redirect-uri: "http://localhost:8080/login/oauth2/code/kakao"
            authorization-grant-type: authorization_code
            client-authentication-method: POST
            client-name: Kakao
            scope:
              - profile_nickname
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${gmail_username}
    password: ${gmail_password}
    properties:
      mail:
        smtp:
          starttls:
            enable: true
            required: true
          auth: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
logging:
  level:
    org.hibernate.SQL: trace
    org.hibernate.type.descriptor.sql.BasicBinder: trace
jwt:
  secret: ${secret_key}
  access-token-expiration-minutes: 1800000
  refresh-token-expiration-minutes: 604800000
cloud:
  aws:
    credentials:
      accessKey: ${aws_access_key_id}
      secretKey: ${aws_secret_access_key}
    s3:
      bucket: main014-bucket
    region:
      static: ap-northeast-2
    stack:
      auto: false